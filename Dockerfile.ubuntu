# Dockerfile Ubuntu aligné sur la configuration de Dockerfile.dev
FROM ubuntu:22.04

# Éviter les prompts interactifs
ENV DEBIAN_FRONTEND=noninteractive

# Définir le dossier de travail
WORKDIR /app

# Installer Python 3 et les dépendances système nécessaires
RUN apt-get update && apt-get install -y \
    python3 \
    python3-dev \
    python3-pip \
    python3-venv \
    gcc \
    g++ \
    libpq-dev \
    && rm -rf /var/lib/apt/lists/*

# Créer des liens symboliques pour python et pip
RUN ln -sf /usr/bin/python3 /usr/bin/python && \
    ln -sf /usr/bin/pip3 /usr/bin/pip

# Mettre à jour pip
RUN pip install --upgrade pip

# Copier les dépendances Python et les installer
COPY requirements.txt .
RUN pip install --no-cache-dir -r requirements.txt

# Copier tout le code source après installation des dépendances
COPY . .

# Copier le fichier d'environnement de développement (comme Dockerfile.dev)
COPY .env.dev .env

# Variables d'environnement pour le mode développement
ENV FLASK_APP=app.py
ENV FLASK_ENV=development
ENV PYTHONUNBUFFERED=1

# Exposer le port utilisé par l'appli
EXPOSE 5001

# Initialiser la base de données, migrer les données SQLite -> MariaDB si nécessaire, et lancer le serveur
CMD ["sh", "-c", "python init_db.py && python migrate_sqlite_to_mariadb.py || true && flask run --host=0.0.0.0 --port=5001"]